//#ifndef _ORANGES,为什么不用写ifdef，因为函数声明可以多次，但是宏定义不能多次

PUBLIC void out_byte(u16 port, u8 value);
PUBLIC u8 in_byte(u16 port);
PUBLIC void disp_str(char * info);
PUBLIC void init_prot();
PUBLIC void init_8259A();
PUBLIC void disp_color_str(char * info, int num);
PUBLIC void disp_int(int input);
//PUBLIC void delay(int time);
PUBLIC void milli_dealy(int milli_sec);
PUBLIC u32 seg2phys(u16 seg);
PUBLIC void TestA();
PUBLIC void TestB();
PUBLIC void TestC();
PUBLIC void restart();
PUBLIC void disable_irq(int irq);
PUBLIC void enable_irq(int irq);
PUBLIC void put_irq_handler(int irq, irq_handler handler);
PUBLIC void spurious_irq(int irq);
PUBLIC void clock_handler(int irq);
PUBLIC int get_ticks();
PUBLIC void sys_call();
PUBLIC int sys_get_ticks();
PUBLIC void schedule();
PUBLIC void milli_delay(int milli_sec);
PUBLIC void disp_str(char*info);
PUBLIC void keyboard_handler(int irq);
PUBLIC void init_keyboard();
PUBLIC void keyboard_read();
PUBLIC void init_clock();
PUBLIC void disable_int();
PUBLIC void enable_int();
PUBLIC void task_tty();
PUBLIC void in_process(TTY* p_tty, u32 key);
PUBLIC int is_current_console(CONSOLE* p_con);
PUBLIC void out_char(CONSOLE *p_con, char ch);
PUBLIC void init_screen(TTY* p_tty);
PUBLIC void scroll_screen(CONSOLE* p_con, int direction);
PUBLIC void select_console(int nr_console);
/*PUBLIC void write(char* buf, int len);
PUBLIC int sys_write(char* buf, int len, PROCESS* p_proc);*/
PUBLIC int printf(const char* fmt, ...);
#define	printl	printf
PUBLIC	int	sys_printx(int _unused1, int _unused2, char* s, struct proc * p_proc);
PUBLIC	int	sendrec(int function, int src_dest, MESSAGE* p_msg);
PUBLIC int sys_sendrec(int function, int src_dest, MESSAGE* m,  struct proc* p);
PUBLIC	int	printx(char* str);
PUBLIC int vsprintf(char* buf, const char* fmt, va_list args);
PUBLIC char* itoa(char * str, int num);
PUBLIC void* va2la(int pid, void* va);
PUBLIC int ldt_seg_linear(struct proc* p, int idx);
PUBLIC void panic(const char *fmt, ...);
PUBLIC void reset_msg(MESSAGE*  p);
PUBLIC int send_recv(int function, int src_dest, MESSAGE* msg);
PUBLIC void task_sys();
